$ git help   
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:						这些是在各种情况下使用的常见Git命令:

start a working area (see also: git help tutorial)								开始工作区域（另请参阅：git帮助教程）
   clone      Clone a repository into a new directory								将存储库克隆到新目录中
   init       Create an empty Git repository or reinitialize an existing one		创建一个空的Git存储库或重新初始化现有存储库

work on the current change (see also: git help everyday)						处理当前的变化（另请参阅：git help每天）
   add        Add file contents to the index										将文件内容添加到索引
   mv         Move or rename a file, a directory, or a symlink						移动或重命名文件，目录或符号链接
   reset      Reset current HEAD to the specified state								将当前HEAD重置为指定状态
   rm         Remove files from the working tree and from the index					从工作树和索引中删除文件

examine the history and state (see also: git help revisions)					检查历史和状态（另请参阅：git help revision）
   bisect     Use binary search to find the commit that introduced a bug			使用二进制搜索来查找引入错误的提交
   grep       Print lines matching a pattern										打印与图案匹配的线条
   log        Show commit logs														显示提交日志
   show       Show various types of objects											显示各种类型的对象
   status     Show the working tree status											显示工作树状态

grow, mark and tweak your common history										成长，标记和调整您的共同历史
   branch     List, create, or delete branches										列出，创建或删除分支
   checkout   Switch branches or restore working tree files							切换分支或恢复工作树文件
   commit     Record changes to the repository										记录对存储库的更改
   diff       Show changes between commits, commit and working tree, etc			显示提交，提交和工作树等之间的更改
   merge      Join two or more development histories together						一起加入两个或多个开发历史
   rebase     Reapply commits on top of another base tip							在另一个基本提示之上重新应用提交
   tag        Create, list, delete or verify a tag object signed with GPG			创建，列出，删除或验证使用GPG签名的标记对象

collaborate (see also: git help workflows)										协作（另请参阅：git help workflows）
   fetch      Download objects and refs from another repository						从另一个存储库下载对象和引用
   pull       Fetch from and integrate with another repository or a local branch	从另一个存储库或本地分支获取并与其集成
   push       Update remote refs along with associated objects						更新远程引用以及关联的对象

'git help -a' and 'git help -g' list available subcommands and some				'git help -a'和'git help -g'列出了可用的子命令和一些
concept guides. See 'git help <command>' or 'git help <concept>'				概念指南。 请参阅'git help <command>'或'git help <concept>'
to read about a specific subcommand or concept.									阅读有关特定子命令或概念的内容。

用户名和邮箱地址的作用：
	用户名和邮箱地址相当于你的身份标识，是本地Git客户端的一个变量，不会随着Git库而改变。
	每次commit都会用用户名和邮箱记录。
	GitHub的contributions跟你的邮箱是有关联的。

查看自己的用户名和邮箱地址：
$ git config user.name
$ git config user.email

修改自己的用户名和邮箱地址：
$ git config --global user.name "MaxsGao"
$ git config --global user.email "gaowang073000@163.com"





















